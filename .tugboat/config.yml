services:
    # What to call the service hosting the site.
    php:
        # Use PHP 8.1 with Apache to serve the WordPress site; this syntax pulls in the latest version of PHP 8.1
        image: tugboatqa/php:8.1-apache

        # Set this as the default service. This does a few things
        #   1. Clones the git repository into the service container
        #   2. Exposes port 80 to the Tugboat HTTP proxy
        #   3. Routes requests to the preview URL to this service
        default: true

        # Wait until the mysql service is done building
        depends: mysql

        # A set of commands to run while building this service
        commands:
            # Commands that set up the basic preview infrastructure
            init:
                # Install prerequisite packages
                - apt-get update
                - apt-get install -y rsync libzip-dev

                # Turn on URL rewriting.
                - a2enmod rewrite headers

                # Install imagick
                - apt-get install -y libmagickwand-dev
                - pecl install imagick-beta -y
                - docker-php-ext-enable imagick

                # Install the PHP extensions
                - docker-php-ext-install mysqli exif zip

                # Install wp-cli
                - curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
                - chmod +x wp-cli.phar
                - mv wp-cli.phar /usr/local/bin/wp
                -
                # Install Wordpress.
                - composer install --optimize-autoloader

                # OPTION 2: Wordpress Core lives in a subdirectory (in this example, 'docroot').
                - ln -snf "${TUGBOAT_ROOT}/docroot" "${DOCROOT}"

                # Set the wp-config.php file with the one you defined for Tugboat.
                - rm -rf ${DOCROOT}/wp-config.php
                - cp ${TUGBOAT_ROOT}/.tugboat/wp-config.tugboat.php ${DOCROOT}/wp-config.php

                # Update permalinks to remove the index.php.
                - wp --allow-root --path="${DOCROOT}" option set permalink_structure /%postname%/
                - wp --allow-root --path="${DOCROOT}" rewrite flush --hard

            # Phase 2 (update): Import files, database, or any other assets that your
            # website needs to run.
            # When you refresh a Tugboat Preview, the process starts here, skipping `init`.
            update:
                # Import uploads
                - tar -C /tmp -zxf uploads.tar.gz
                - rsync -avz --delete /tmp/uploads/ "${TUGBOAT_ROOT}/docroot/wp-content/uploads/"
                - chgrp -R www-data "${DOCROOT}/wp-content/uploads"
                - find "${DOCROOT}/wp-content/uploads" -type d -exec chmod 2775 {} \;
                - find "${DOCROOT}/wp-content/uploads" -type f -exec chmod 0664 {} \;

                # Cleanup
                - apt-get clean
                - rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

        urls:
            - /
            - /about/
            - /contact/
            - /tugboat-engines-typically-produce-680-to-3400-hp/

        visualdiff:
            threshold: 90

    # What to call the service hosting MySQL. This name also acts as the
    # hostname to access the service by from the php service.
    mysql:
        image: tugboatqa/mysql:5-debian
        checkout: true
        commands:
            update:
                - zcat database.sql.gz | mysql tugboat
